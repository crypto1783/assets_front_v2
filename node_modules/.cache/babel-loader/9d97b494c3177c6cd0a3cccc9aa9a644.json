{"ast":null,"code":"var _jsxFileName = \"/Users/jianlexia/code/sub/ticket_v2/ticket_front_end/front/kitties-hw/frontend/src/Kitties.js\";\n\n/* ticket */\nimport React, { useEffect, useState } from 'react';\nimport { Form, Grid } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\nimport { TxButton } from './substrate-lib/components';\nimport KittyCards from './KittyCards';\nexport default function Kitties(props) {\n  const {\n    api,\n    keyring\n  } = useSubstrate();\n  const {\n    accountPair\n  } = props;\n  const [kittyCnt, setKittyCnt] = useState(0);\n  const [kittyDNAs, setKittyDNAs] = useState([]);\n  const [kittyOwners, setKittyOwners] = useState([]);\n  const [kitties, setKitties] = useState([]);\n  const [status, setStatus] = useState('');\n  const [kittyPrices, setKittyPrices] = useState([]); //\n\n  const [preDNAs, setPreDNAs] = useState([]);\n  const [creaters, setCreaters] = useState([]); //setIsValids\n\n  const [isInvalids, setIsInvalids] = useState([]);\n\n  const fetchKittyCnt = () => {\n    /* TODO: 加代码，从 substrate 端读取数据过来1 2*/\n    api.query.kittiesModule.kittiesCount(amount => {\n      //获取猫咪总数/ID\n      let kittyCount = amount.toJSON();\n      setKittyCnt(kittyCount);\n    });\n  };\n\n  const fetchKittiesOwner = () => {\n    //获取猫咪的主人\n    api.query.kittiesModule.kittyOwners.multi([...Array(kittyCnt).keys()], data => {\n      let tempData = [];\n      data.map(row => {\n        if (row.isNone) {\n          tempData.push('猫不存在');\n        } else {\n          let kittyOwner = row.value.toHuman();\n          tempData.push(kittyOwner);\n        }\n      });\n      setKittyOwners(tempData);\n    }); // debugger;\n  };\n\n  const fetchKittiesPreDNA = () => {\n    //获取猫咪的主人\n    api.query.kittiesModule.kittyPre.multi([...Array(kittyCnt).keys()], data => {\n      let tempData = [];\n      data.map(row => {\n        if (row.isNone) {\n          tempData.push(' ');\n        } else {\n          let preDNA = row.value.toHuman();\n          tempData.push(preDNA);\n        }\n      });\n      setPreDNAs(tempData);\n    });\n    console.log(\"predna=\" + preDNAs);\n  };\n\n  const fetchKitties = () => {\n    api.query.kittiesModule.kitties.multi([...Array(kittyCnt).keys()], data => {\n      let tempData = [];\n      data.map(row => {\n        if (row.isNone) {\n          tempData.push('no kitty');\n        } else {\n          let kittyDna = row.value.toHuman();\n          tempData.push(kittyDna);\n        }\n      });\n      setKittyDNAs(tempData);\n    });\n    api.query.kittiesModule.ticketCreater.multi([...Array(kittyCnt).keys()], data => {\n      let tempData = [];\n      data.map(row => {\n        if (row.isNone) {\n          tempData.push(' ');\n        } else {\n          let creater = row.value.toHuman();\n          tempData.push(creater);\n        }\n      });\n      setCreaters(tempData);\n    });\n    api.query.kittiesModule.isInvalid.multi([...Array(kittyCnt).keys()], data => {\n      let tempData = [];\n      data.map(row => {\n        if (row.isNone) {\n          tempData.push(false);\n        } else {\n          let invalid = row.value.toHuman();\n          tempData.push(invalid);\n        }\n      });\n      console.log(\"invalid ==\", tempData);\n      setIsInvalids(tempData);\n    });\n  };\n\n  const fetchKittiesPrice = () => {\n    api.query.kittiesModule.priceAmount.multi([...Array(kittyCnt).keys()], data => {\n      let tempData = [];\n      data.map(row => {\n        let price = 0;\n\n        if (null != row && null != row.words) {\n          price = row.words;\n        }\n\n        tempData.push(price[0]);\n      });\n      setKittyPrices(tempData);\n    });\n  };\n\n  const populateKitties = () => {\n    /* TODO: 加代码，从 substrate 端读取数据过来 */\n    let kittiesAllInfo = [];\n\n    for (let idx = 0; idx < kittyCnt; idx++) {\n      if (accountPair.address == kittyOwners[idx]) {\n        kittiesAllInfo.push({\n          id: idx,\n          dna: kittyDNAs[idx],\n          owner: kittyOwners[idx],\n          price: kittyPrices[idx],\n          preDna: preDNAs[idx],\n          creater: creaters[idx],\n          invalid: isInvalids[idx]\n        });\n      }\n    }\n\n    setKitties(kittiesAllInfo);\n    console.log(\"kitties=\", kitties);\n  };\n\n  useEffect(fetchKittyCnt, [api, keyring]);\n  useEffect(fetchKitties, [api, kittyCnt]);\n  useEffect(fetchKittiesOwner, [api, kittyCnt]);\n  useEffect(fetchKittiesPrice, [api, kittyCnt]);\n  useEffect(fetchKittiesPreDNA, [api, kittyCnt]);\n  useEffect(populateKitties, [kittyDNAs, kittyOwners, kittyPrices, preDNAs, accountPair]);\n  return /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, \"\\u6211\\u7684\\u7968\\u636E\"), /*#__PURE__*/React.createElement(KittyCards, {\n    kitties: kitties,\n    accountPair: accountPair,\n    setStatus: setStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    style: {\n      margin: '1em 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TxButton, {\n    accountPair: accountPair,\n    label: \"create ticket\",\n    type: \"SIGNED-TX\",\n    setStatus: setStatus,\n    attrs: {\n      palletRpc: 'kittiesModule',\n      callable: 'create',\n      inputParams: [100],\n      paramFields: ['price']\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      overflowWrap: 'break-word'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }\n  }, status));\n}","map":{"version":3,"sources":["/Users/jianlexia/code/sub/ticket_v2/ticket_front_end/front/kitties-hw/frontend/src/Kitties.js"],"names":["React","useEffect","useState","Form","Grid","useSubstrate","TxButton","KittyCards","Kitties","props","api","keyring","accountPair","kittyCnt","setKittyCnt","kittyDNAs","setKittyDNAs","kittyOwners","setKittyOwners","kitties","setKitties","status","setStatus","kittyPrices","setKittyPrices","preDNAs","setPreDNAs","creaters","setCreaters","isInvalids","setIsInvalids","fetchKittyCnt","query","kittiesModule","kittiesCount","amount","kittyCount","toJSON","fetchKittiesOwner","multi","Array","keys","data","tempData","map","row","isNone","push","kittyOwner","value","toHuman","fetchKittiesPreDNA","kittyPre","preDNA","console","log","fetchKitties","kittyDna","ticketCreater","creater","isInvalid","invalid","fetchKittiesPrice","priceAmount","price","words","populateKitties","kittiesAllInfo","idx","address","id","dna","owner","preDna","margin","textAlign","palletRpc","callable","inputParams","paramFields","overflowWrap"],"mappings":"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","sourcesContent":["/* ticket */\n\nimport React, { useEffect, useState } from 'react';\nimport { Form, Grid } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\nimport { TxButton } from './substrate-lib/components';\n\nimport KittyCards from './KittyCards';\n\nexport default function Kitties(props) {\n  const { api, keyring } = useSubstrate();\n  const { accountPair } = props;\n\n  const [kittyCnt, setKittyCnt] = useState(0);\n  const [kittyDNAs, setKittyDNAs] = useState([]);\n  const [kittyOwners, setKittyOwners] = useState([]);\n  const [kitties, setKitties] = useState([]);\n  const [status, setStatus] = useState('');\n  const [kittyPrices, setKittyPrices] = useState([]);//\n  const [preDNAs, setPreDNAs] = useState([]);\n  const [creaters, setCreaters] = useState([]);//setIsValids\n  const [isInvalids, setIsInvalids] = useState([]);\n  \n\n  const fetchKittyCnt = () => {\n    /* TODO: 加代码，从 substrate 端读取数据过来1 2*/\n    api.query.kittiesModule.kittiesCount(amount => {\n      //获取猫咪总数/ID\n      let kittyCount = amount.toJSON();\n      setKittyCnt(kittyCount);\n\n    })\n  };\n\n  const fetchKittiesOwner = () => {\n    //获取猫咪的主人\n    api.query.kittiesModule.kittyOwners.multi([...Array(kittyCnt).keys()], (data) => {\n      let tempData = [];\n      data.map(row => {\n        if (row.isNone) {\n          tempData.push('猫不存在');\n        } else {\n          let kittyOwner = row.value.toHuman();\n\n          tempData.push(kittyOwner);\n        }\n      })\n      setKittyOwners(tempData);\n    })\n   // debugger;\n  }\n\n  const fetchKittiesPreDNA = () => {\n    //获取猫咪的主人\n    api.query.kittiesModule.kittyPre.multi([...Array(kittyCnt).keys()], (data) => {\n      let tempData = [];\n      data.map(row => {\n        if (row.isNone) {\n          tempData.push(' ');\n        } else {\n          let preDNA = row.value.toHuman();\n\n          tempData.push(preDNA);\n        }\n      })\n      setPreDNAs(tempData);\n    })\n    console.log(\"predna=\" + preDNAs);\n  }\n\n  const fetchKitties = () => {\n\n    api.query.kittiesModule.kitties.multi([...Array(kittyCnt).keys()], (data) => {\n      let tempData = [];\n      data.map(row => {\n        if (row.isNone) {\n          tempData.push('no kitty');\n        } else {\n          let kittyDna = row.value.toHuman();\n          tempData.push(kittyDna);\n        }\n      })\n      setKittyDNAs(tempData);\n    });\n    api.query.kittiesModule.ticketCreater.multi([...Array(kittyCnt).keys()], (data) => {\n      let tempData = [];\n      data.map(row => {\n        if (row.isNone) {\n          tempData.push(' ');\n        } else {\n          let creater = row.value.toHuman();\n          tempData.push(creater);\n        }\n      })\n      setCreaters(tempData);\n    });\n\n    api.query.kittiesModule.isInvalid.multi([...Array(kittyCnt).keys()], (data) => {\n      let tempData = [];\n      data.map(row => {\n        if (row.isNone) {\n          tempData.push(false);\n        } else {\n          let invalid = row.value.toHuman();\n          tempData.push(invalid);\n        }\n      })\n      console.log(\"invalid ==\", tempData);\n      setIsInvalids(tempData);\n    });\n  }\n\n  const fetchKittiesPrice = () => {\n    api.query.kittiesModule.priceAmount.multi([...Array(kittyCnt).keys()], (data) => {\n      let tempData = [];\n      data.map(row => {\n        let price = 0;\n        if (null != row && null != row.words)\n        {\n            price = row.words;\n        }\n        tempData.push(price[0]);\n        \n      })\n      setKittyPrices(tempData);\n    })\n  }\n\n  const populateKitties = () => {\n    /* TODO: 加代码，从 substrate 端读取数据过来 */\n    let kittiesAllInfo = [];\n\n    for (let idx = 0; idx < kittyCnt; idx++) {\n      if(accountPair.address == kittyOwners[idx])\n      {\n        kittiesAllInfo.push({\n        id: idx,\n        dna: kittyDNAs[idx],\n        owner: kittyOwners[idx],\n        price:kittyPrices[idx],\n        preDna:preDNAs[idx],\n        creater:creaters[idx],\n        invalid:isInvalids[idx]\n        })\n      }\n      \n    }\n\n    setKitties(kittiesAllInfo);\n    console.log(\"kitties=\", kitties);\n  };\n\n  useEffect(fetchKittyCnt, [api, keyring]);\n  useEffect(fetchKitties, [api, kittyCnt]);\n  useEffect(fetchKittiesOwner, [api, kittyCnt]);\n  useEffect(fetchKittiesPrice, [api, kittyCnt]);\n  useEffect(fetchKittiesPreDNA, [api, kittyCnt]);\n  useEffect(populateKitties, [kittyDNAs, kittyOwners,kittyPrices, preDNAs, accountPair]);\n\n  \n\n  return <Grid.Column width={16}>\n    <h1>我的票据</h1>\n    <KittyCards kitties={kitties} accountPair={accountPair} setStatus={setStatus} />\n    <Form style={{ margin: '1em 0' }}>\n      <Form.Field style={{ textAlign: 'center' }}>\n        <TxButton\n          accountPair={accountPair} label='create ticket' type='SIGNED-TX' setStatus={setStatus}\n          attrs={{\n            palletRpc: 'kittiesModule',\n            callable: 'create',\n            inputParams: [100],\n            paramFields: ['price']\n          }}\n        />\n      </Form.Field>\n    </Form>\n    <div style={{ overflowWrap: 'break-word' }}>{status}</div>\n  </Grid.Column>;\n}"]},"metadata":{},"sourceType":"module"}